name: Java CI with Maven and Email Notification

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - '*'
    tags:
      - '*'
    paths:
      - '**'
      - '!*.md'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build and start Docker containers
        run: |
          docker-compose -f docker-compose.yml up --build -d
          docker pull selenoid/vnc_chrome:119.0

      - name: Check containers
        run: |
          docker ps

      - name: Check container maven_1
        run: |
          docker logs yaksometests_maven_1

      - name: Check container selenoid-ui
        run: |
          docker logs yaksometests_selenoid-ui_1

      - name: Check container selenoid_1
        run: |
          docker logs yaksometests_selenoid_1
          

      - name: Wait for services to be ready
        run: |
          chmod +x wait-for-it.sh
          ./wait-for-it.sh -t 0 localhost:4444

      - name: Start ngrok tunnel for Selenoid UI
        run: |
          wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
          unzip ngrok-stable-linux-amd64.zip
          ./ngrok http 4444 &

      - name: Get ngrok URL
        id: ngrok
        run: echo "::set-output name=url::$(curl -sS http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')"

      - name: Display ngrok URL
        run:
          echo "Selenoid UI URL: ${{ steps.ngrok.outputs.url }}"

      - name: Start tests
        run: |
          docker-compose run maven mvn test



      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Create allure-results directory
        if: always()
        run: mkdir -p YakSomeTests/target/allure-results && chmod -R 777 YakSomeTests/target/allure-results

      - name: Set write permissions for allure-results directory
        if: always()
        run: chmod -R +w $GITHUB_WORKSPACE/target/allure-results

      - name: Allure set up
        uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: target/allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history

      - name: Compile allure Reports
        if: always()
        run: |
          docker-compose run maven mvn allure:report

      - name: Package Allure reports into zip file
        if: always()
        run: zip -r allure-reports.zip target/site/allure-maven-plugin

      - name: Send mail
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          connection_url: smtp://${{ secrets.logpass }}@smtp-zen.alwaysdata.net:587
          subject: GitHub Actions Job Result
          to: today_na@tutanota.com
          from: Luke Skywalker <zen@alwaysdata.net>
          ignore_cert: true
          attachments: allure-reports.zip
          body: |
            Build job of ${{ github.repository }} completed successfully!

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history